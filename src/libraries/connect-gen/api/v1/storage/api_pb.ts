// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=.ts"
// @generated from file api/v1/storage/api.proto (package api.v1.storage, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message api.v1.storage.CreateUploadUrlRequest
 */
export class CreateUploadUrlRequest extends Message<CreateUploadUrlRequest> {
  /**
   * @generated from field: int32 length = 1;
   */
  length = 0;

  constructor(data?: PartialMessage<CreateUploadUrlRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.storage.CreateUploadUrlRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUploadUrlRequest {
    return new CreateUploadUrlRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUploadUrlRequest {
    return new CreateUploadUrlRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUploadUrlRequest {
    return new CreateUploadUrlRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUploadUrlRequest | PlainMessage<CreateUploadUrlRequest> | undefined, b: CreateUploadUrlRequest | PlainMessage<CreateUploadUrlRequest> | undefined): boolean {
    return proto3.util.equals(CreateUploadUrlRequest, a, b);
  }
}

/**
 * @generated from message api.v1.storage.CreateUploadUrlResponse
 */
export class CreateUploadUrlResponse extends Message<CreateUploadUrlResponse> {
  /**
   * @generated from field: string path = 1;
   */
  path = "";

  /**
   * @generated from field: string url = 2;
   */
  url = "";

  constructor(data?: PartialMessage<CreateUploadUrlResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.v1.storage.CreateUploadUrlResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUploadUrlResponse {
    return new CreateUploadUrlResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUploadUrlResponse {
    return new CreateUploadUrlResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUploadUrlResponse {
    return new CreateUploadUrlResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUploadUrlResponse | PlainMessage<CreateUploadUrlResponse> | undefined, b: CreateUploadUrlResponse | PlainMessage<CreateUploadUrlResponse> | undefined): boolean {
    return proto3.util.equals(CreateUploadUrlResponse, a, b);
  }
}

